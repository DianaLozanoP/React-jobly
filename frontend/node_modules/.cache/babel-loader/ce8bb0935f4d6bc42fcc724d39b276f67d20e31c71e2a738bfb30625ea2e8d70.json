{"ast":null,"code":"var _jsxFileName = \"/home/dianaloz/react-jobly/react-jobly/frontend/src/Companies.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport JoblyApi from \"./api\";\nimport Company from \"./Company\";\nimport SearchForm from \"./Hooks/SearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Companies = () => {\n  _s();\n  const navigate = useNavigate();\n  //setting the state for companies\n  const [companies, setCompanies] = useState([]);\n  //search company after filling out form\n  const searchCompany = async ({\n    search\n  }) => {\n    let companiesData = await JoblyApi.searchCompany(search);\n    setCompanies(companiesData.companies);\n  };\n  const handleCompanyClick = handle => {\n    navigate(`company/${handle}`);\n  };\n  //get data from API\n  useEffect(() => {\n    const getCompanies = async () => {\n      let companiesData = await JoblyApi.getAllCompanies();\n      setCompanies(companiesData.companies);\n    };\n    getCompanies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"companies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      searchTerm: searchCompany\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), companies.map(c => /*#__PURE__*/_jsxDEV(Company, {\n      handleCompanyClick: handleCompanyClick,\n      handle: c.handle,\n      description: c.description,\n      name: c.name\n    }, c.handle, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Companies, \"HFfKIhIVn0lBE6hbzaZaui0xBvo=\", false, function () {\n  return [useNavigate];\n});\n_c = Companies;\nexport default Companies;\nvar _c;\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"names":["useState","useEffect","useNavigate","JoblyApi","Company","SearchForm","jsxDEV","_jsxDEV","Companies","_s","navigate","companies","setCompanies","searchCompany","search","companiesData","handleCompanyClick","handle","getCompanies","getAllCompanies","className","children","searchTerm","fileName","_jsxFileName","lineNumber","columnNumber","map","c","description","name","_c","$RefreshReg$"],"sources":["/home/dianaloz/react-jobly/react-jobly/frontend/src/Companies.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport JoblyApi from \"./api\";\nimport Company from \"./Company\";\nimport SearchForm from \"./Hooks/SearchForm\";\n\nconst Companies = () => {\n    const navigate = useNavigate();\n    //setting the state for companies\n    const [companies, setCompanies] = useState([]);\n    //search company after filling out form\n    const searchCompany = async ({ search }) => {\n        let companiesData = await JoblyApi.searchCompany(search)\n        setCompanies(companiesData.companies)\n    }\n    const handleCompanyClick = (handle) => {\n        navigate(`company/${handle}`)\n    }\n    //get data from API\n    useEffect(() => {\n        const getCompanies = async () => {\n            let companiesData = await JoblyApi.getAllCompanies();\n            setCompanies(companiesData.companies)\n        }\n        getCompanies();\n    }, [])\n    return (\n        <div className=\"companies\">\n            <SearchForm searchTerm={searchCompany} />\n            {companies.map((c) => (\n                <Company\n                    key={c.handle}\n                    handleCompanyClick={handleCompanyClick}\n                    handle={c.handle}\n                    description={c.description}\n                    name={c.name} />\n            ))}\n        </div>\n\n    )\n}\n\nexport default Companies;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,OAAO;AAC5B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B;EACA,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAMa,aAAa,GAAG,MAAAA,CAAO;IAAEC;EAAO,CAAC,KAAK;IACxC,IAAIC,aAAa,GAAG,MAAMZ,QAAQ,CAACU,aAAa,CAACC,MAAM,CAAC;IACxDF,YAAY,CAACG,aAAa,CAACJ,SAAS,CAAC;EACzC,CAAC;EACD,MAAMK,kBAAkB,GAAIC,MAAM,IAAK;IACnCP,QAAQ,CAAE,WAAUO,MAAO,EAAC,CAAC;EACjC,CAAC;EACD;EACAhB,SAAS,CAAC,MAAM;IACZ,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIH,aAAa,GAAG,MAAMZ,QAAQ,CAACgB,eAAe,CAAC,CAAC;MACpDP,YAAY,CAACG,aAAa,CAACJ,SAAS,CAAC;IACzC,CAAC;IACDO,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIX,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBd,OAAA,CAACF,UAAU;MAACiB,UAAU,EAAET;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxCf,SAAS,CAACgB,GAAG,CAAEC,CAAC,iBACbrB,OAAA,CAACH,OAAO;MAEJY,kBAAkB,EAAEA,kBAAmB;MACvCC,MAAM,EAAEW,CAAC,CAACX,MAAO;MACjBY,WAAW,EAAED,CAAC,CAACC,WAAY;MAC3BC,IAAI,EAAEF,CAAC,CAACE;IAAK,GAJRF,CAAC,CAACX,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIE,CACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGd,CAAC;AAAAjB,EAAA,CAlCKD,SAAS;EAAA,QACMN,WAAW;AAAA;AAAA6B,EAAA,GAD1BvB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}