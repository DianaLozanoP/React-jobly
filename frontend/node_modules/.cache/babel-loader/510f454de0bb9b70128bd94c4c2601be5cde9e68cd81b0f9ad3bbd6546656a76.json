{"ast":null,"code":"var _jsxFileName = \"/home/dianaloz/react-jobly/react-jobly/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from './Navbar';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { useState, useContext, useEffect } from \"react\";\nimport Home from './Home';\nimport Companies from './Companies';\nimport CompanyJobs from './CompanyJobs';\nimport Jobs from './Jobs';\nimport LogIn from './LogIn';\nimport SignUp from './SignUp';\nimport Profile from './Profile';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport JoblyApi from './api';\nimport TokenProvider, { useToken } from './TokenProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  });\n  const [token, setToken] = useLocalStorage('token', '');\n  const navigate = useNavigate();\n  const {\n    updateToken\n  } = useToken();\n  useEffect(() => {\n    updateToken(token);\n  }, [token, updateToken]);\n  const addUser = async ({\n    user,\n    token\n  }) => {\n    setToken(token);\n    if (user.firstName) {\n      setCurrentUser({\n        username: user.username,\n        firstName: user.firstName,\n        lastName: user.lastName\n      });\n    } else {\n      let response = await JoblyApi.getUser(user.username);\n      setCurrentUser({\n        username: response.user.username,\n        firstName: response.firstName,\n        lastName: response.lastName\n      });\n    }\n  };\n  const logout = () => {\n    setToken('');\n    setCurrentUser({\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    });\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(TokenProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        currentUser: currentUser,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/companies\",\n          element: /*#__PURE__*/_jsxDEV(Companies, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/companies/:handle\",\n          element: /*#__PURE__*/_jsxDEV(CompanyJobs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/jobs\",\n          element: /*#__PURE__*/_jsxDEV(Jobs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LogIn, {\n            addUser: addUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {\n            addUser: addUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7cqSY/th/ppKdjuX7LnnVkH9eaU=\", false, function () {\n  return [useLocalStorage, useNavigate, useToken];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","NavBar","Routes","Route","useNavigate","useState","useContext","useEffect","Home","Companies","CompanyJobs","Jobs","LogIn","SignUp","Profile","useLocalStorage","JoblyApi","TokenProvider","useToken","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","username","firstName","lastName","token","setToken","navigate","updateToken","addUser","user","response","getUser","logout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/dianaloz/react-jobly/react-jobly/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport NavBar from './Navbar';\nimport { Routes, Route, useNavigate } from 'react-router-dom'\nimport { useState, useContext, useEffect } from \"react\"\nimport Home from './Home';\nimport Companies from './Companies';\nimport CompanyJobs from './CompanyJobs';\nimport Jobs from './Jobs';\nimport LogIn from './LogIn';\nimport SignUp from './SignUp';\nimport Profile from './Profile';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport JoblyApi from './api';\nimport TokenProvider, { useToken } from './TokenProvider';\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState({ username: \"\", firstName: \"\", lastName: \"\" })\n  const [token, setToken] = useLocalStorage('token', '');\n\n  const navigate = useNavigate();\n\n  const { updateToken } = useToken()\n\n  useEffect(() => {\n    updateToken(token)\n  }, [token, updateToken])\n\n  const addUser = async ({ user, token }) => {\n    setToken(token);\n    if (user.firstName) {\n      setCurrentUser({ username: user.username, firstName: user.firstName, lastName: user.lastName })\n    } else {\n      let response = await JoblyApi.getUser(user.username)\n      setCurrentUser({ username: response.user.username, firstName: response.firstName, lastName: response.lastName })\n    }\n\n  }\n  const logout = () => {\n    setToken('')\n    setCurrentUser({ username: \"\", firstName: \"\", lastName: \"\" })\n    navigate(\"/\")\n  }\n\n  return (\n    <TokenProvider>\n      <div className=\"App\">\n        <NavBar currentUser={currentUser} logout={logout} />\n        <Routes>\n          <Route path=\"/\" element={<Home currentUser={currentUser} />} />\n          <Route path=\"/companies\" element={<Companies />} />\n          <Route path=\"/companies/:handle\" element={<CompanyJobs />} />\n          <Route path=\"/jobs\" element={<Jobs />} />\n          <Route path=\"/login\" element={<LogIn addUser={addUser} />} />\n          <Route path=\"/signup\" element={<SignUp addUser={addUser} />} />\n          <Route path=\"/profile\" element={<Profile currentUser={currentUser} />} />\n        </Routes>\n\n      </div>\n    </TokenProvider>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,SAASC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,QAAQ,MAAM,OAAO;AAC5B,OAAOC,aAAa,IAAIC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,QAAQ,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC7F,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC;EAEtD,MAAMe,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAE2B;EAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAElCX,SAAS,CAAC,MAAM;IACdwB,WAAW,CAACH,KAAK,CAAC;EACpB,CAAC,EAAE,CAACA,KAAK,EAAEG,WAAW,CAAC,CAAC;EAExB,MAAMC,OAAO,GAAG,MAAAA,CAAO;IAAEC,IAAI;IAAEL;EAAM,CAAC,KAAK;IACzCC,QAAQ,CAACD,KAAK,CAAC;IACf,IAAIK,IAAI,CAACP,SAAS,EAAE;MAClBF,cAAc,CAAC;QAAEC,QAAQ,EAAEQ,IAAI,CAACR,QAAQ;QAAEC,SAAS,EAAEO,IAAI,CAACP,SAAS;QAAEC,QAAQ,EAAEM,IAAI,CAACN;MAAS,CAAC,CAAC;IACjG,CAAC,MAAM;MACL,IAAIO,QAAQ,GAAG,MAAMlB,QAAQ,CAACmB,OAAO,CAACF,IAAI,CAACR,QAAQ,CAAC;MACpDD,cAAc,CAAC;QAAEC,QAAQ,EAAES,QAAQ,CAACD,IAAI,CAACR,QAAQ;QAAEC,SAAS,EAAEQ,QAAQ,CAACR,SAAS;QAAEC,QAAQ,EAAEO,QAAQ,CAACP;MAAS,CAAC,CAAC;IAClH;EAEF,CAAC;EACD,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBP,QAAQ,CAAC,EAAE,CAAC;IACZL,cAAc,CAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IAC7DG,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEV,OAAA,CAACH,aAAa;IAAAoB,QAAA,eACZjB,OAAA;MAAKkB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBjB,OAAA,CAACnB,MAAM;QAACsB,WAAW,EAAEA,WAAY;QAACa,MAAM,EAAEA;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpDtB,OAAA,CAAClB,MAAM;QAAAmC,QAAA,gBACLjB,OAAA,CAACjB,KAAK;UAACwC,IAAI,EAAC,GAAG;UAACC,OAAO,eAAExB,OAAA,CAACZ,IAAI;YAACe,WAAW,EAAEA;UAAY;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DtB,OAAA,CAACjB,KAAK;UAACwC,IAAI,EAAC,YAAY;UAACC,OAAO,eAAExB,OAAA,CAACX,SAAS;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnDtB,OAAA,CAACjB,KAAK;UAACwC,IAAI,EAAC,oBAAoB;UAACC,OAAO,eAAExB,OAAA,CAACV,WAAW;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DtB,OAAA,CAACjB,KAAK;UAACwC,IAAI,EAAC,OAAO;UAACC,OAAO,eAAExB,OAAA,CAACT,IAAI;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCtB,OAAA,CAACjB,KAAK;UAACwC,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAExB,OAAA,CAACR,KAAK;YAACoB,OAAO,EAAEA;UAAQ;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DtB,OAAA,CAACjB,KAAK;UAACwC,IAAI,EAAC,SAAS;UAACC,OAAO,eAAExB,OAAA,CAACP,MAAM;YAACmB,OAAO,EAAEA;UAAQ;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DtB,OAAA,CAACjB,KAAK;UAACwC,IAAI,EAAC,UAAU;UAACC,OAAO,eAAExB,OAAA,CAACN,OAAO;YAACS,WAAW,EAAEA;UAAY;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAGpB;AAACpB,EAAA,CA/CQD,GAAG;EAAA,QAGgBN,eAAe,EAExBX,WAAW,EAEJc,QAAQ;AAAA;AAAA2B,EAAA,GAPzBxB,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}